Build a complete fleet management web application using:

ðŸ”§ Tech Stack:
- Next.js (App Router) with TypeScript
- MongoDB (using Mongoose)
- Tailwind CSS for styling
- Zod for form validation
- Recharts for analytics (optional)
- Use shadcn/ui or plain Tailwind components for admin dashboard layout

ðŸ“¦ Overview:
I run a fleet business by taking vehicles from companies like **PMV** and **Letzryd**. I assign 2 drivers to each vehicle â€” one for the **morning shift**, and one for the **evening shift**. Each driver logs **Uber trips daily**, and I need to track:

1. ðŸš— Total vehicle trips per week
2. ðŸ’° Rental I owe to the company (PMV or Letzryd) based on trips
3. ðŸ’¸ Rental the drivers owe me daily (â‚¹600 or â‚¹500)
4. ðŸ‘¥ Substitute drivers when a regular driver is on leave

ðŸ§  Business Logic in Detail:

ðŸ”¹ VEHICLE RENTAL SETTLEMENT (WEEKLY)
- At the end of each week (Sunday), calculate total trips per vehicle by combining morning and evening shifts.
- Based on total weekly trips and vehicleâ€™s company, apply these **rental slabs**:

Letzryd Rental Slabs:
- 140+ trips â†’ â‚¹260/day
- 125-139 â†’ â‚¹380/day
- 110-124 â†’ â‚¹470/day
- 80-109 â†’ â‚¹600/day
- 65-79 â†’ â‚¹710/day
- Below 65 â†’ â‚¹950/day

PMV Rental Slabs:
- 140+ trips â†’ â‚¹150/day
- 135-139 â†’ â‚¹249/day
- 120-134 â†’ â‚¹444/day
- 80-119 â†’ â‚¹640/day
- 65-79 â†’ â‚¹750/day
- Below 65 â†’ â‚¹949/day

The system should calculate:
- Weekly total trips per vehicle
- Rental rate applied
- Weekly rent = rate Ã— 7
- Save into `WeeklySettlement` collection

ðŸ”¹ DRIVER RENTAL (DAILY)
- Drivers pay rent daily based on:
  - â‚¹600/day if accommodation is provided
  - â‚¹500/day if not
- Each day:
  - Log whether driver paid or not
  - Track pending rent

ðŸ”¹ SUBSTITUTE DRIVER SUPPORT
- When a driver is on leave:
  - Substitute is added with name, shift hours, and charge
  - Charge slabs:
    - 6 hrs â†’ â‚¹250
    - 8 hrs â†’ â‚¹350
    - 12 hrs â†’ â‚¹500

ðŸ”¹ TRIP TRACKING
- Each driver logs:
  - Vehicle ID
  - Shift (morning/evening)
  - Trip date
  - Trip count
- These trip logs update weekly calculations automatically

ðŸ”¹ DASHBOARD FEATURES
- Vehicle selector (dropdown)
- On selecting a vehicle, show:
  - Weekly trip total
  - Rental rate and amount owed to company
  - Both drivers assigned (morning/evening)
  - Their individual trip totals
  - Pending driver rent

ðŸ“‚ DATABASE COLLECTIONS TO CREATE:
- `Vehicle`: vehicleNumber, company (PMV or Letzryd), assignedDrivers [morningId, eveningId]
- `Driver`: name, phone, hasAccommodation (boolean)
- `Trip`: driverId, vehicleId, tripDate, shift, tripCount
- `DriverRentLog`: driverId, date, rent, paid (boolean)
- `WeeklySettlement`: vehicleId, weekStart, weekEnd, totalTrips, rentalRate, totalRent, paid (boolean)
- `SubstituteDriver`: name, date, vehicleId, shiftHours, amount

âœ… START BY BUILDING:
1. Trip entry form (driverId, vehicleId, date, shift, tripCount)
2. Daily rent log form (driverId, paid: true/false)
3. Logic to calculate weekly settlement (trip aggregation + rental slab logic)
4. Vehicle dashboard UI with dropdown + weekly summary (trip count, rent, drivers)

âœ… Extra Notes:
- Use Zod for validating all forms
- Use timestamps in models (`createdAt`, `updatedAt`)
- Use App Router structure (`app/` folder) for all API and frontend pages
- Use MongoDB Atlas or local DB for storage
- Keep layout desktop-first (admin use)
