📅 Store, group, and calculate all rent, trips, settlements, and profits by week only
🧮 All calculations (trip count, rent, profit, slab, etc.) must be computed only within each week
🖥️ In the Dashboard, show:
This week's live data by default
Dropdown or date selector to view previous weeks' data
✅ Final Feature Summary
📅 Weekly Structure:
Each week = Sunday to Saturday
Data must be grouped by:
weekStart (e.g., 2025-06-29)
weekEnd (e.g., 2025-07-05)
Every log (trip, rent, substitute, settlement) must be attached to a specific week
🧠 Calculations Per Week (for Each Vehicle):
Total trips: All trips for that vehicle between weekStart and weekEnd
Driver rent collected:
Based on number of days each driver worked that week
₹600 or ₹500/day depending on accommodation
Substitute rent:
₹250 (6 hrs), ₹350 (8 hrs), ₹500 (12 hrs)
Company rent:
Slab-based rent × 7 days (based on total weekly trips)
Profit:
profit = (driverRentSum + substituteRentSum) – (companyRentalRate × 7)
📈 Dashboard UI:
Show current week summary on default page load
Add a dropdown/date picker to select previous weeks
Weekly view must include:
Optimization Tip (how many trips to reach better slab)
Driver-wise rent (paid/unpaid)
Profit or loss
Trip count and slab info
✅ Backend Structure (Must-Have)
📂 Collections
Each log must be tagged by week:
Trip:
driverId, vehicleId, tripDate, tripCount, weekStart
DriverRentLog:
driverId, vehicleId, date, rentAmount, paid, weekStart
SubstituteDriverLog:
vehicleId, date, shiftHours, rentAmount, weekStart
WeeklySettlement:
vehicleId, weekStart, weekEnd, tripCount, rentalRate, companyRent, totalDriverRent, substituteRent, profit
✅ Final Prompt (Copy-Paste This into Replit AI):
🔧 Update my fleet management system (React + Express + MongoDB) to work **entirely based on weekly sections**.

---

✅ Objectives:

1. Group all logs (Trip, Rent, Substitute, Settlement) by week:
   - Define week as Sunday to Saturday
   - Attach `weekStart` and `weekEnd` fields to every log entry
   - Ensure backend filters and calculates **only using that week's data**

2. Update all profit/rent/slab calculations to be **weekly-only**:
   - Weekly trip count = sum of all trip logs in the week per vehicle
   - Use correct slab (Letzryd or PMV) based on trip count
   - Rent collection = sum of rent from all drivers who drove the vehicle that week (use hasAccommodation to determine daily rent)
   - Add substitute rent based on hours
   - Profit = (Driver Rent + Substitute Rent) – (Slab Rent × 7)

3. In Dashboard:
   - Show current week summary by default
   - Add dropdown or calendar to select and view past weeks
   - Each week’s data section should include:
     - Total trips
     - Slab applied
     - Optimization tip
     - Rent received (Paid + Pending)
     - Company rent
     - Substitute rent
     - Weekly Profit or Loss

4. Ensure trip deletion updates all affected weekly values:
   - Recalculate weekly totals
   - Remove affected rent logs
   - Update settlement and optimization tip

5. Display driver rent status (Paid / Unpaid) grouped per week, not across all time

---

🎯 Final Goal:
All parts of the system must run on weekly logic.  
Admins can view current week by default, and browse/select previous weeks to analyze past settlements, profits, and rent performance per vehicle.
